pip install numpy
{   'mean': [axis1, axis2, flattened],;   'variance': [axis1, axis2, flattened],;   'standard deviation': [axis1, axis2, flattened],;   'max': [axis1, axis2, flattened],;   'min': [axis1, axis2, flattened],;   'sum': [axis1, axis2, flattened]; }
import numpy as np
def calculate(numbers):
import numpy as np
def calculate(numbers):
/home/gitpod/.pyenv/shims/python "/workspace/.gitpod/pip install numpy.py"
python3 main.py
import numpy as np
def calculate(numbers):
/home/gitpod/.pyenv/shims/python "/workspace/.gitpod/pip install numpy.py"
from mean_var_std import calculate
# Test input list
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8]
# Menguji fungsi calculate dan mencetak hasilnya
result = calculate(numbers)
print(result)
python3 main.py
pytest
pip install pytest
pytest
git init
git remote add origin https://github.com/username/nama-repositori.git
git add .
git commit -m "Initial commit"
git push -u origin master
pip install pandas
import pandas as pd
# Memuat dataset CSV
data = pd.read_csv('adult.csv')
# Menampilkan beberapa baris pertama dari dataset untuk memastikan data berhasil dimuat
print(data.head())
import pandas as pd
data = pd.read_csv('adult.csv')
race_counts = data['race'].value_counts()
print(race_counts)
average_age_men = data[data['sex'] == 'Male']['age'].mean()
print(average_age_men)
bachelors_percentage = (data['education'] == 'Bachelors').mean() * 100
print(f"Persentase yang memiliki gelar Bachelors: {bachelors_percentage:.2f}%")
advanced_education = data[data['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
advanced_education_more_than_50K = advanced_education[advanced_education['salary'] == '>50K']
percentage_advanced_education_more_than_50K = (advanced_education_more_than_50K.shape[0] / advanced_education.shape[0]) * 100
print(f"Persentase orang dengan pendidikan lanjutan yang memiliki gaji lebih dari 50K: {percentage_advanced_education_more_than_50K:.2f}%")
no_advanced_education = data[~data['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
no_advanced_education_more_than_50K = no_advanced_education[no_advanced_education['salary'] == '>50K']
percentage_no_advanced_education_more_than_50K = (no_advanced_education_more_than_50K.shape[0] / no_advanced_education.shape[0]) * 100
print(f"Persentase orang tanpa pendidikan lanjutan yang memiliki gaji lebih dari 50K: {percentage_no_advanced_education_more_than_50K:.2f}%")
min_hours_per_week = data['hours-per-week'].min()
print(f"Jumlah jam kerja minimum per minggu: {min_hours_per_week}")
min_hours_data = data[data['hours-per-week'] == min_hours_per_week]
min_hours_more_than_50K = min_hours_data[min_hours_data['salary'] == '>50K']
percentage_
/home/gitpod/.pyenv/shims/python /workspace/.gitpod/demographic_data_analyzer.py
python3 demographic_data_analyzer.py
data = pd.read_csv('subfolder/adult.csv')
python3 demographic_data_analyzer.py
import pandas as pd
data = pd.read_csv('adult.csv')
race_count = data['race'].value_counts()
average_age_men = data[data['sex'] == 'Male']['age'].mean()
percentage_bachelors = (data['education'] == 'Bachelors').mean() * 100
higher_education = data['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
higher_education_salary = data[higher_education & (data['salary'] == '>50K')]
percentage_higher_education_salary = (higher_education_salary.shape[0] / higher_education.shape[0]) * 100
no_higher_education = ~data['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
no_higher_education_salary = data[no_higher_education & (data['

higher_education = data['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
no_higher_education = ~data['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
higher_education_salary = data[higher_education & (data['salary'] == '>50K')]
percentage_higher_education_salary = (higher_education_salary.shape[0] / higher_education.shape[0]) * 100

no_higher_education_salary = data[no_higher_education & (data['salary'] == '>50K')]
percentage_no_higher_education_salary = (no_higher_education_salary.shape[0] / no_higher_education.shape[0]) * 100

python3 demographic_data_analyzer.py

/home/gitpod/.pyenv/shims/python /workspace/.gitpod/demographic_data_analyzer.py
import pandas as pd
# Membaca data
data = pd.read_csv('adult.csv')
import pandas as pd
data = pd.read_csv('adult.csv')
ls
python3 demographic_data_analyzer.py
git init
git remote add origin <URL_REPOSITORY_GITHUB>
git add .
git commit -m "Add completed project"
git push -u origin master
echo "# demographic-data-analyzer" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/lokokji/demographic-data-analyzer.git
git push -u origin main
echo "# demographic-data-analyzer" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/lokokji/demographic-data-analyzer.git
git branch -M main
git push -u origin main
$ git push -u origin main
git push -u origin master
git branch
git branch -M main
git remote -v
git remote set-url origin https://github.com/lokokji/demographic-data-analyzer.git
git remote -v
git push -u origin main
touch mean_var_std.py
touch main.py
from mean_var_std import calculate
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8]
result = calculate(numbers)
print(result)
from mean_var_std import calculate
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8]
result = calculate(numbers)
print(result)
/home/gitpod/.pyenv/shims/python /workspace/.gitpod/mean_var_std.py
python3 main.py
git commit -m "Add mean_var_std.py and main.py with calculate function"
git remote add origin https://github.com/your-username/your-repository-name.git
git remote -v
